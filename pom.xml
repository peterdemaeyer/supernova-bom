<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>su.pernova</groupId>
	<artifactId>bom</artifactId>
	<name>Supernova BOM</name>
	<description>Bill of materials and definition of standards for Supernova projects.</description>
	<url>https://github.com/peterdemaeyer/supernova-bom/</url>
	<version>${revision}${changelist}</version>
	<packaging>pom</packaging>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://raw.githubusercontent.com/peterdemaeyer/supernova-bom/main/LICENSE.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Peter De Maeyer</name>
			<email>peter.de.maeyer@gmail.com</email>
			<organization>Supernova</organization>
			<organizationUrl>https://github.com/peterdemaeyer/</organizationUrl>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/peterdemaeyer/supernova-bom.git</connection>
		<developerConnection>scm:git:ssh://github.com:peterdemaeyer/supernova-bom.git</developerConnection>
		<url>https://github.com/peterdemaeyer/supernova-bom/tree/main/</url>
		<tag>${version}</tag>
	</scm>
	<properties>
		<revision>1.1.1</revision>
		<changelist>-SNAPSHOT</changelist>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jacoco.coverage.minimum>1.0</jacoco.coverage.minimum>
		<!-- Dependency versions (alphabetically). -->
		<checkstyle.version>10.8.1</checkstyle.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-io.version>2.11.0</commons-io.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<commons-text.version>1.10.0</commons-text.version>
		<jackson.version>2.13.4</jackson.version>
		<junit-jupiter.version>5.9.2</junit-jupiter.version>
		<junit-platform.version>1.9.2</junit-platform.version>
		<log4j.version>2.20.0</log4j.version>
		<mockito.version>5.2.0</mockito.version>
		<!-- Maven plugin versions (alphabetically). -->
		<build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
		<flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>3.1.0</maven-deploy-plugin.version>
		<maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
		<maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
		<maven-install-plugin.version>3.1.1</maven-install-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
		<maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
		<maven-toolchains-plugin.version>3.1.0</maven-toolchains-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
	</properties>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>${commons-text.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>com.puppycrawl.tools</groupId>
				<artifactId>checkstyle</artifactId>
				<version>${checkstyle.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>commons</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>commons</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>metrics</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>metrics</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>search</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>serialization</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>units</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>su.pernova</groupId>
				<artifactId>statistics</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- Compatibility with SLF4J. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Compatibility with Log4j 1.2. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>${maven-toolchains-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<failIfNoTests>false</failIfNoTests>
						<excludes>
							<exclude>**/*IntegrationTest.java</exclude>
							<exclude>**/*ContractTest.java</exclude>
						</excludes>
						<includes>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<!-- Supernova defines *IntegrationTest as integration test name pattern instead of the default *IT. -->
						<includes>
							<include>**/*IntegrationTest.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<!-- The ID must match the ID of the default goal, because we want to reconfigure it. -->
						<id>default-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<!-- Don't produce an artifact of type "jar" if main/src is empty. -->
						<configuration>
							<skipIfEmpty>true</skipIfEmpty>
						</configuration>
					</execution>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<!-- Don't produce an artifact of type "test-jar" if test/src is empty. -->
						<configuration>
							<skipIfEmpty>true</skipIfEmpty>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
						<!--
							Given that we flatten the pom, it is useful to have the source pom.xml in the sources.
							Especially for projects of packaging type "pom", for which it will be the ONLY file in the sources.
						-->
						<configuration>
							<includePom>true</includePom>
						</configuration>
					</execution>
					<execution>
						<id>attach-test-sources</id>
						<goals>
							<goal>test-jar-no-fork</goal>
						</goals>
						<!-- The pom is already in the main sources jar, no need to include it here again. -->
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<excludePackageNames>*.internal.*</excludePackageNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<keyname>${gpg.keyname}</keyname>
							<passphraseServerId>${gpg.server}</passphraseServerId>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<!--
						This parent POM should flatten as little as possible, to keep its BOM nature and pass on its
						properties to its children.
						Child POMs should flatten as much as possible, to avoid cluttering the public POM with
						build-specific information.
					-->
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten-flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<!-- Possibilities are BUNDLE, PACKAGE, CLASS. -->
									<element>BUNDLE</element>
									<limits>
										<limit>
											<!-- Possibilities are INSTRUCTION, LINE, BRANCH. -->
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.coverage.minimum}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-no-snapshots-in-releases</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireReleaseDeps>
									<onlyWhenRelease>true</onlyWhenRelease>
									<failWhenParentIsSnapshot>true</failWhenParentIsSnapshot>
									<message>No snapshots allowed in release!</message>
								</requireReleaseDeps>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
